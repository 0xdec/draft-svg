{"version":3,"sources":["draft-svg.min.js","draft-svg.js"],"names":["draft","View","mixin","svg","width","height","_this","this","_svgMaxWidth","_svgMaxHeight","undefined","_svg","calcX","calcY","domPrefix","domID","find","_render","listener","NS","VERSION","element","px","prop","doc","document","getElementByID","console","info","node","createElementNS","type","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","children","Symbol","iterator","next","done","child","value","childNode","appendChild","err","on","removeChild","val","setAttribute","target","id","apply","join","zoom","Math","min","svgWidth","svgHeight","parent"],"mappings":"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","file":"draft-svg.min.js","sourcesContent":[null,"/*\n* draft-svg - A plugin for draft.js that renders models using SVG\n* version v0.0.0\n* http://draft.D1SC0te.ch\n*\n* copyright Jordi Pakey-Rodriguez <jordi.orlando@hexa.io>\n* license MIT\n*\n* BUILT: Thu Jan 21 2016 05:41:28 GMT-0600 (CST)\n*/\n(function() {\n  draft.View.mixin({\n    svg(width, height) {\n      this._svgMaxWidth = width || this._svgMaxWidth || this.width();\n      this._svgMaxHeight = height || this._svgMaxHeight || this.height();\n\n      if (this._svg === undefined) {\n        const NS = 'http://www.w3.org/2000/svg';\n        // const XMLNS = 'http://www.w3.org/2000/xmlns/';\n        // const XLINK = 'http://www.w3.org/1999/xlink';\n        const VERSION = '1.1';\n\n        var calcX = function(element) {\n          return draft.px(element.prop('x')) - element.width() / 2;\n        };\n\n        var calcY = function(element) {\n          return -draft.px(element.prop('y')) - element.height() / 2;\n        };\n\n        var domPrefix = `${this.doc.domID}:${this.domID}:svg`;\n        var domID = function(element) {\n          return `${domPrefix}:${element.domID}`;\n        };\n\n        var find = function(element) {\n          return document.getElementByID(domID(element));\n        };\n\n        var render = function(element) {\n          console.info('rendering svg:', element.domID);\n\n          var node = document.createElementNS(NS, element.type);\n\n          // TODO: separate listener for each property?\n          var listener;\n\n          switch (element.type) {\n            case 'group':\n              node = document.createElementNS(NS, 'g');\n\n              for (let child of element.children) {\n                let childNode = render(child);\n                if (childNode) {\n                  node.appendChild(childNode);\n                }\n              }\n\n              element.on('add', function(child) {\n                let childNode = render(child);\n                if (childNode) {\n                  node.appendChild(childNode);\n                }\n              });\n\n              element.on('remove', function(child) {\n                node.removeChild(find(child));\n              });\n              // Falls through\n            case 'rect':\n              listener = function(prop, val) {\n                val = draft.px(val);\n\n                switch (prop) {\n                  case 'width':\n                    node.setAttribute('width', val);\n                    // Falls through\n                  case 'x':\n                    node.setAttribute('x', calcX(this.target));\n                    break;\n                  case 'height':\n                    node.setAttribute('height', val);\n                    // Falls through\n                  case 'y':\n                    node.setAttribute('y', calcY(this.target));\n                    break;\n                }\n              };\n\n              break;\n            case 'circle':\n              listener = function(prop, val) {\n                val = draft.px(val);\n\n                /* if (prop === 'cy') {\n                  val *= -1;\n                }\n\n                node.setAttribute(prop, val); */\n\n                switch (prop) {\n                  case 'r':\n                    node.setAttribute('r', val);\n                    break;\n                  case 'x':\n                    node.setAttribute('cx', val);\n                    break;\n                  case 'y':\n                    node.setAttribute('cy', -val);\n                    break;\n                }\n              };\n\n              break;\n          }\n\n          // TODO: support all elements\n          if (typeof listener === 'function') {\n            node.id = domID(element);\n\n            // TODO: add support for fill and stroke\n            node.setAttribute('fill-opacity', 0);\n            node.setAttribute('stroke', '#000');\n            node.setAttribute('stroke-width', 1);\n\n            for (let prop in element.prop()) {\n              listener.apply({target: element}, [prop, element.prop(prop)]);\n            }\n\n            element.on('change', listener);\n\n            return node;\n          }\n        };\n\n        var svg = this._svg = document.createElementNS(NS, 'svg');\n        svg.setAttribute('xmlns', NS);\n        svg.setAttribute('version', VERSION);\n        // svg.setAttributeNS(XMLNS, 'xmlns:xlink', XLINK);\n\n        svg.id = domID(this);\n\n        var listener = function(prop) {\n          if (prop === 'width' || prop === 'height') {\n            // 1 SVG user unit = 1px\n            svg.setAttribute('viewBox', [\n              calcX(this.target), calcY(this.target),\n              this.target.width(), this.target.height()\n            ].join(' '));\n\n            let zoom = Math.min(\n              draft.px(this.target._svgMaxWidth) / this.target.width(),\n              draft.px(this.target._svgMaxHeight) / this.target.height()\n            );\n\n            let svgWidth = this.target.width() * zoom;\n            let svgHeight = this.target.height() * zoom;\n\n            this.target._svg.setAttribute('width', svgWidth);\n            this.target._svg.setAttribute('height', svgHeight);\n\n            // console.info('aspect ratio:', this.target.aspectRatio);\n          }\n        };\n\n        listener.apply({target: this}, ['width']);\n        listener.apply({target: this}, ['height']);\n\n        this.on('change', listener);\n\n        svg.appendChild(render(this.parent));\n      }\n\n      return this._svg;\n    }\n  });\n})();\n"],"sourceRoot":"/source/"}